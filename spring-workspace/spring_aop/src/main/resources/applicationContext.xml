<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name ="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name ="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"></property>
		<property name ="username" value = "mybatis"></property>
		<property name ="password" value = "1234"></property>
	</bean>
	<!--  mybatis를 사용하기 시작하면서 jdbcTemplate을 사용 안 하게 됨 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/mapper/**/*SQL.xml"></property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSession"></constructor-arg>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760"></property>
	</bean>
	<!-- 트랜잭션 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven/>	<!-- Transaction과 관련한 것도 annotation을 쓸거야 라는 명령어. -->
	<task:annotation-driven/> <!-- 작업 관련한 Annotation을 쓴다는 것을 선언. Scheduled가 task에 있음 -->
	<!-- AOP설정 -->
		<!-- aop를 bean 방식을 안 쓰고 anotation 으로 사용하겠다고 선언 -->
		<aop:aspectj-autoproxy/>
		
		<!-- aop Bean 방식
		<bean id="log" class="kr.or.iei.common.LogAdvice"></bean>
		<aop:config>
			<aop:pointcut expression="execution(* kr.or.iei..*Service.*(..))" id="allPointcut"/>
			<aop:aspect ref="log">
				<aop:before method="printLog" pointcut-ref="allPointcut"/>
			</aop:aspect>
		</aop:config>
		-->
	
	<!-- Scan -->
	<context:component-scan base-package="kr.or.iei.common"/>
	<context:component-scan base-package="kr.or.iei.member"/>
	<context:component-scan base-package="kr.or.iei.notice"/>

</beans>