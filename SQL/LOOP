--LOOP--
-------------LOOP
SET SERVEROUTPUT ON;

-- 1. BASIC LOOP : 조건 없이 무한 반복
DECLARE
    I NUMBER :=1;
BEGIN
    LOOP -- 반복시작
        DBMS_OUTPUT.PUT_LINE(I);
        I := I+1;
        IF I>5
        THEN EXIT;
        END IF;
    END LOOP; -- 반복 끝지점
END;
/

------------FOR LOOP
DECLARE
BEGIN
    FOR I IN REVERSE 1..5 LOOP
    DBMS_OUTPUT.PUT_LINE(I);
    END LOOP;
END;
/

DECLARE
    USERINFO EMPLOYEE%ROWTYPE;
BEGIN
    FOR I IN 0..22 LOOP
    SELECT *
    INTO USERINFO
    FROM EMPLOYEE WHERE EMP_ID=200+I;
    DBMS_OUTPUT.PUT_LINE('이름 : '||USERINFO.EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('급여 : '||USERINFO.SALARY);
    END LOOP;
E
END;
/
DECLARE
    I NUMBER := 1;
BEGIN
    WHILE I<=5 LOOP
    DBMS_OUTPUT.PUT_LINE(I);
    I := I+1;
    END LOOP;
END;
/
--TOP N 분석을 위한 PL/SQL을 만들어라
/* '급여'/'보너스'/'입사일'
무조건 1위~5위 까지를 출력하는 PL/SQL을 만들어라
*/
DECLARE
    USERINFO EMPLOYEE%ROWTYPE;
    I NUMBER :=1;
    RANK NUMBER;
    SEL VARCHAR(20);
BEGIN
    SEL := '&SEL';
    CASE SEL
        WHEN '급여' THEN 
        DBMS_OUTPUT.PUT_LINE('----- 급여 랭킹 TOP 5 -----');
        LOOP
           SELECT 순위, EMP_NAME, SALARY
           INTO RANK, USERINFO.EMP_NAME, USERINFO.SALARY
           FROM (SELECT EMP_NAME, SALARY, ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS 순위
                      FROM EMPLOYEE)
           WHERE 순위 =I;
           
           DBMS_OUTPUT.PUT_LINE('랭킹 : '||I||' / 이름 : '||USERINFO.EMP_NAME||' / 급여 : '||USERINFO.SALARY);
           I := I+1;
           IF I>5
           THEN EXIT;
           END IF;
        END LOOP;
        --
        WHEN '보너스' THEN
        DBMS_OUTPUT.PUT_LINE('----- 보너스 랭킹 TOP 5 -----');
        LOOP
           SELECT 순위, EMP_NAME, BONUS
           INTO RANK, USERINFO.EMP_NAME, USERINFO.BONUS
           FROM (SELECT EMP_NAME, BONUS, ROW_NUMBER() OVER(ORDER BY BONUS DESC) AS 순위
                      FROM EMPLOYEE
                      WHERE BONUS IS NOT NULL)
           WHERE 순위 =I;
           
           DBMS_OUTPUT.PUT_LINE('랭킹 : '||I||' / 이름 : '||USERINFO.EMP_NAME||' / 보너스율 : '||USERINFO.BONUS||'%');
           I := I+1;
           IF I>5
           THEN EXIT;
           END IF;
        END LOOP;
        --
        WHEN '입사일' THEN 
             DBMS_OUTPUT.PUT_LINE('----- 입사일 랭킹 TOP 5 -----');
        LOOP
           SELECT 순위, EMP_NAME, HIRE_DATE
           INTO RANK, USERINFO.EMP_NAME, USERINFO.HIRE_DATE
           FROM (SELECT EMP_NAME, HIRE_DATE, ROW_NUMBER() OVER(ORDER BY HIRE_DATE ASC) AS 순위
                      FROM EMPLOYEE)
           WHERE 순위 =I;
           
           DBMS_OUTPUT.PUT_LINE('랭킹 : '||I||' / 이름 : '||USERINFO.EMP_NAME||' / 입사일 : '||USERINFO.HIRE_DATE);
           I := I+1;
           IF I>5
           THEN EXIT;
           END IF;
        END LOOP;
        --
        ELSE DBMS_OUTPUT.PUT_LINE('잘못입력하였습니다');
    END CASE;
       
END;
/


