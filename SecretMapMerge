		//카카오 예제 - 비밀지도 문제 (난이도 : 하)
		Scanner scK = new Scanner(System.in); //Scanner
		
		System.out.print("지도 1, 2의 크기를 정해주세요 : "); //지도크기 n
		int n = scK.nextInt();
		int [] map1 = new int[n];
		int [] map2 = new int[n];
		boolean [][] arr1 = new boolean [n][n];
		boolean [][] arr2 = new boolean [n][n];
		char [][] mergeMap = new char [n][n];
	
		for(int i=0; i<n; i++) {
			System.out.print("지도 1의 값 "+n+"개를 넣어주세요.(가능한 값 : 0<x<"+(int)(Math.pow(2,n))+") : ");
			map1[i] = scK.nextInt();
		}
		
		for(int i=0; i<n; i++) {
			System.out.print("지도 2의 값 "+n+"개를 넣어주세요.(가능한 값 : 0<x<"+(int)(Math.pow(2,n))+") : ");
			map2[i] = scK.nextInt();
		}
		
		System.out.println("arr1 입력 값 :");
		for(int i=0; i<n; i++) {
			System.out.print(map1[i]+"\t");
		}
		System.out.println();
		
		System.out.println("arr2 입력 값 :");
		for(int i=0; i<n; i++) {
			System.out.print(map2[i]+"\t");
		}
		System.out.println();

		//Array 1 : 배열에 true/false 넣기
		for(int i=0;i<arr1.length; i++) {
			for(int j=0;j<map1.length;j++) {
				if(map1[i]%2==1 && map1[i]!=1) {
					arr1[i][arr1.length-1-j]=true;
					map1[i] = map1[i]/2;
				}else if(map1[i]%2==0 && map1[i]!=1){
					map1[i] = map1[i]/2;
					arr1[i][arr1.length-1-j]=false;
				}else if(map1[i]==1 && map1[i]!=2) {
					arr1[i][map1.length-1-j]=true;
					break;
				}
			}
		}

		//Array 2 : 배열에 1과 0 넣기
		for(int i=0;i<arr2.length; i++) {
			for(int j=0;j<map2.length;j++) {
				if(map2[i]%2==1 && map2[i]!=1) {
					arr2[i][arr2.length-1-j]=true;
					map2[i] = map2[i]/2;
				}else if(map2[i]%2==0 && map2[i]!=1){
					map2[i] = map2[i]/2;
					arr2[i][arr2.length-1-j]=false;
				}else if(map2[i]==1 && map2[i]!=2) {
					arr2[i][map2.length-1-j]=true;
					break;
				}
			}
		}
		/*
		//Arr1 전체 보기
		for(int i=0; i<arr1.length; i++) {
			for(int j=0; j<arr1[i].length; j++) {
				System.out.print(arr1[i][j]+"\t");
			}
			System.out.println();
		}
		//Arr2 전체 보기
		for(int i=0; i<arr2.length; i++) {
			for(int j=0; j<arr2[i].length; j++) {
				System.out.print(arr2[i][j]+"\t");
			}
			System.out.println();
		}
		*/
		//지도합치기
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				if(arr1[i][j]==false && arr2[i][j]==false) {
					mergeMap[i][j] = ' ';
				}else{
					mergeMap[i][j] = '#';
				}
			}
		}
		/*
		//합친 지도 보기
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				System.out.print(mergeMap[i][j]+"\t");
			}
			System.out.println();
		}
		*/
		//합친 지도 출력
		for(int i=0; i<n;i++) {
			for(int j=0; j<n; j++) {
				System.out.print(mergeMap[i][j]);
			}
			System.out.println();
		}
